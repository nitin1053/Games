import numpy as np

def find_minimax_strategy(payoff_matrix):
    max_of_mins = np.max(np.min(payoff_matrix, axis=0))
    minimax_strategy = np.where(np.min(payoff_matrix, axis=0) == max_of_mins)[0]
    return minimax_strategy

def find_maximin_strategy(payoff_matrix):
    min_of_maxs = np.min(np.max(payoff_matrix, axis=1))
    maximin_strategy = np.where(np.max(payoff_matrix, axis=1) == min_of_maxs)[0]
    return maximin_strategy

def find_saddle_point(payoff_matrix):
    row_max = np.max(payoff_matrix, axis=1)
    col_min = np.min(payoff_matrix, axis=0)
    saddle_points = []
    for i in range(len(row_max)):
        for j in range(len(col_min)):
            if row_max[i] == col_min[j]:
                saddle_points.append((i, j))
    return saddle_points

# Example usage:
payoff_matrix = [
    [3, 1, 2],
    [2, 4, 5],
    [0, 3, 2]
]

minimax_strategy = find_minimax_strategy(payoff_matrix)
maximin_strategy = find_maximin_strategy(payoff_matrix)
saddle_points = find_saddle_point(payoff_matrix)

print("Minimax strategy:", minimax_strategy)
print("Maximin strategy:", maximin_strategy)
print("Saddle point(s):", saddle_points)
